--chapter 2
一、算法的作用，实现“人脑比电脑快”
二、推导大O阶 1、用常数1取代运行时间中的所有加法常数 2、再修改后的运行此书函数中，只保留最高阶项。 3、如果最高项存在的且不是1，则去除与这个项相乘的常数。
三、算法时间复杂度！ 抓住问题规模的大小，一切不相关的都不要管。关键是要分析循环结构的运行情况
四、难的是对数列的一些相关运算
五、O(1) < O(logn) < O(n) < O(nlogn) < O(n^2) < O(n^3) < O(2^n) < O(n!) < O(n^n)



--chapter 4
一、LIFO结构 last in first out. 首先它是一个线性表，也就是说，栈元素具有现行关系，即前驱后继关系，只不过他是一种特殊的线性表而已。他的特殊之处在于限制了这个线性表的插入和删除位置，它始终只在栈顶进行。栈底是固定的。
二、最先进栈的元素，是不是就只能最后出栈呢？ 不一定，栈只对插入和删除的位置进行的限制，没有对元素进出的时间进行限制。

--chapter 5
一、
